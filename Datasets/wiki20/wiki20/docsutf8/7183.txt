
   The Challenge of Deep Models, Inference Structures, and Abstract Tasks
   
   Abstract
   
   The paper discusses methodological achievements which have been
   incorporated into second generation expert systems. The key ideas are
   (1) to incorporate more principled knowledge about the domain into a
   knowledge based system and to reason from these (first) principles,
   (2) to define the conceptual model explicitly, and (3) to do some
   abstraction. Abstraction is done on three levels: the factual
   knowledge level, the level of inference steps, and the task level. The
   challenges of these methods are discussed from the viewpoint of
   medical and technical applications.
   
   ?OEFAI-TR-90-17, appeared in Applied Artificial Intelligence,
   5(1)47-56, 1991
   
   Introduction
   
   The great rumor about expert systems started in the late 1970s. It was
   provoked by systems of great promise for medical diagnostic support
   and for interpretation, diagnosis and configuration in natural
   sciences areas and in technical domains. It resulted in a widespread
   application of expert system technology. The goal was to represent the
   skills of experienced domain experts in a knowledge based system (KBS)
   and make this knowledge available to less experienced users when
   solving daily problems. And the goal is still the same today.
   
   Capturing the experience of experts focussed on his/her ability to
   find a quick solution to the problem. This resulted in building
   systems in a straightforward manner by representing associations
   between symptoms often seen and a diagnosis (e.g. for the diagnostic
   problem). Despite the success in several areas of application, a list
   of problems showed up:
   
    While working well in the central area of expertise, the systems
   reach horrible conclusions on their knowledge boundaries. There is no
   graceful degradation of performance when coming to these boundaries,
   as we would expect from an expert. More seriously, the systems are not
   able to recognize their own boundaries.
   
    Besides simple backward tracing of rule invocations there is no
   chance to provide meaningful and user-tailored explanations. This
   would require to explain the underlying principles how the problem at
   hand is solved.
   
    Knowledge acquisition is the most pressing problem. In what is
   commonly called the Feigenbaum bottleneck: there is one knowledge
   engineer (the bottleneck) who filters all the expert's knowledge. The
   usual situation can be envisioned by having an expert telling the
   knowledge engineer some pieces of knowledge which come to his mind
   during a rather unstructured interview. The knowledge engineer has
   only a vague idea how these pieces of knowledge fit into the overall
   picture of the domain represented. As a result we are facing the
   problems of bad formalization, incorrect representation of knowledge,
   inconsistencies, and last but not least the open question of
   completeness.
   
   A common cause of these problems is the lack of any understanding what
   the expert is really doing. The expert systems are representing
   surface knowledge only. The surface knowledge of the expert is
   transformed directly into a rule-based or frame-based form of
   representation. As a result, these systems do not have any idea about
   the underlying causes of the problem, the inherent structural
   relations and the tasks the expert is performing when solving the
   problem. They stay on the surface level.
   
   Toward abstract knowledge structures, problem solv-
   
   ing methods, task specifications
   
   In the early 1980s several people stressed the importance of going
   away from the direct implementation of surface knowledge. Donald
   Michie pointed towards high-road programs incorporating structural
   information in the form of causal representations [Michie 1981]. Peter
   Hart identified several levels of representation, introducing the term
   deep knowledge. He put emphasis on the combination of surface and deep
   level systems in order to get fast performance and a good
   understanding of what is going on:
   
   \In the near term, success of AI as viewed from the external world is
   most likely to come from the exploitation of surface systems, but
   long-term successes will come from continuing research on deep systems
   and from understanding the relation between deep and surface systems"
   [Hart 1982, p.15].
   
   Allan Newell got one step further by introducing the knowledge level:
   
   \Knowledge is to be characterized entirely functionally, in terms of
   what it does, not structurally, in terms of physical objects with
   particular properties and relations. This still leaves open the
   requirement for a physical structure for knowledge that can fill the
   functional role. In fact, that key role is never filled directly.
   Instead, it is filled only indirectly and approximately by symbol
   systems at the next lower level" [Newell 1982, p.105].
   
   After nearly ten years of research we are able to see three
   methodological achievements:
   
   1. An explicit representation of the application domain by
   incorporation of structural and functional knowledge into knowledge
   based systems. These systems are often called second generation expert
   systems or deep expert systems [Steels 1985].
   
   2. A thorough description of the inference steps performed during
   problem solving. An abstract view of these inference steps gives us
   inference structures [Clancey 1985] and problem solving methods
   [McDermott 1988].
   
   3. A specification of the tasks performed during problem solving.
   Whereas it is quite clear that the tasks differ from application to
   application, researchers try to find abstract task descriptions
   [Chandrasekaran 1986, 1987, 1988].
   
   These three achievements are not to be seen as separating items, but
   rather as methods for knowledge-based systems operating on different
   levels. The integration of these levels can be seen in the KADS system
   [Hayward et al. 1987, Schreiber et al. 1988]. KADS is a system
   distinguishing knowledge at four different levels: (1) domain
   knowledge, describing concepts and elements of the domain and their
   interrelations; (2) the inference structure, describing inferences
   which can be made. The inference structure relates meta-classes.
   Meta-classes are an abstracted view of the domain knowledge by
   describing the role of
   
   domain concepts; (3) the task knowledge specifies how the goals of the
   application can be achieved using the available inference steps; and
   (4) the strategic level, which should be able to control the execution
   of tasks by following specific strategies depending on the situation
   of the current case or problem. This strategic level is rather small
   when looking at existing KBS, but it reminds us of the possibility to
   follow different reasoning or problem-solving strategies. This will be
   definitely of importance in broad domains for future KBS.1
   
   Leaving the strategic level aside for a moment, we get the
   componential framework of the layers: domain model, problem-solving
   methods, and task specification (see also [Steels 1990]). All three
   contribute essentially to the depth of a knowledge-based system by
   making explicit what are the knowledge structures of the domain, how
   do reasoning methods operate on these structures and what are the
   tasks performed during the problemsolving process.2
   
   Key Ideas
   
   Several key ideas which form the basis of these methodological
   developments are summarized in the following. References are with
   respect to applications in medical and in technical domains. This
   should enable us to contrast the biological field versus the technical
   field in the discussion.
   
   Incorporating More Principled Knowledge About Domains
   
   The first key idea is to incorporate more principled knowledge about
   the domain into the KBS. This can be done both by building a detailed
   model of the domain, and by following the principled ways of reasoning
   within the domain.
   
   Representing more principled knowledge about the domain means (1) to
   bring a lot of structure into the model, often using the special form
   of taxonomies; and (2) to relate this structures. This relation can be
   done by linking the structures due to known causality. In this case we
   enter the area of causal modeling. The inference process follows the
   pathways of the causal net during problem solving. The causal net
   approach has its foundations in early medical (AIM-)systems (CASNET
   [Weiss et al. 1978], CADUCEUS [Pople 1982], ABEL [Patil et al. 1982]).
   It supports the trace of known pathophysiological relations. In
   addition, it is a convenient way to model the basic constituents of
   the medical domain: anatomy [Horn 1989], physiology, pathophysiology,
   etiology and nosology [Senyk et al. 1989], thus providing a basis for
   AIM-systems with the intent to cover broad areas of medical expertise.
   
   1The `Oxford System of Medicine' - a decision support system designed
   for the use by General Practitioners - operates on the strategic
   level. It is able to modify medical strategies. Generic
   decision-making schemata are tailored to suit the needs of the tasks
   to be performed during a consultation [Glowinski et al. 1989].
   2A thorough discussion of factors being related to the depth of expert
   systems can be found in [Bylander 1987, Chandrasekaran et al. 1987,
   Klein and Finin 1987, Keravnou and Washbrook 1989, Steels 1988,
   Washbrook and Keravnou 1990].
   
   A second form of relation is the functional relation. It describes the
   function or behavior of components by giving the function of its
   subcomponents. More and more detailed description levels can be
   reached using functional decomposition. This is of interest both for
   medical diagnosis and technical diagnosis [Steels 1989, Sticklen and
   Chandrasekaran 1989, Sticklen et al. 1989].
   
   A third way of bringing more principled knowledge about the domain
   into the KBS is by describing the physiological structure of the
   system. This structure is used to simulate the behavior of the system.
   The simulation can be done either by using a model describing the
   physiological mechanisms in the form of qualitative relations (e.g.
   electrophysiology of the heart [Bratko et al. 1989, Hunter et al.
   1989]) or by using a qualitative, constraint model like the QSIM
   approach [Kuipers 1986], which is mainly based on differential
   equations. Qualitative simulation is well suited to model flows (of
   liquids, pulses, information, etc.) both in the medical domain [Ironi
   et al. 1989] and the technical domain [Haag 1988]. The hard problem is
   how to make use of the simulation model for a diagnostic system. One
   possibility is to assume each component to be faulty which does not
   produce the expected behavior. The second is to explicitly define
   faults by introducing fault models. Model-based diagnosis currently
   concentrates on finding single or multiple device faults at hardware
   troubleshooting [Davis 1984, de Kleer and Williams 1987, Reiter 1987,
   de Kleer et al. 1990].
   
   A detailed description of the structure and behavior of devices
   enables to use more principled methods of reasoning. That's what
   [Davis 1983] called reasoning from first principles. This works fine
   for technical domains as the correct or faulty behavior of devices is
   well defined. In the medical field `correct' behavior is often
   impossible to define exactly. The first principles approach is
   therefore limited to areas with well described physiological behavior,
   like renal physiology [Kunz 1983].
   
   Defining the Conceptual Model Explicitly
   
   The second key idea is the explicit definition of a conceptual model,
   which is clearly separated from the implementation. The conceptual
   model specifies the KBS at the knowledge level. The KADS approach
   provides interpretation models for creating a high-level functional
   specification of the problem solving process in the form of a
   conceptual model. The interpretation models are defined for many
   different inference methods. Similarly, Chandrasekaran's generic tasks
   are conceptual entities, which define a specific function at the
   knowledge level.
   
   The conceptual model is an abstraction of the problem solving behavior
   of the domain experts. It is completely independant of the
   implementation of the KBS. In addition to the conceptual model, the
   KADS approach defines a design model, which is on the same level of
   abstraction as the conceptual model. It takes into account constraints
   from performance requirements, appearance of the system (e.g. user
   interfaces), and integration requirements with existing hardware and
   software systems. The design model is a specification of the KBS at a
   level, which [Steels 1990] calls the knowledge-use level. It should
   support direct implementation of the AI system.
   
   Abstraction
   
   Abstraction has a central role in designing KBS. Corresponding to the
   levels of a KBS previously mentioned, there are different forms of
   abstraction:
   
    There is abstraction of factual knowledge. Knowledge is
   represented at different levels of abstraction supporting the
   inference steps to be performed at different levels of detail. An
   early example is the ABEL system [Patil 1981, Patil et al. 1982]. The
   importance of abstraction steps for diagnosis was also recognized
   early in the CA- DUCEUS system for internal medicine [Pople 1982] by
   introducing planning links associating manifestations with abstract
   involvement structures. The use of abstractions during diagnosis helps
   to focus the reasoning process. The resulting improvement of
   efficiency when applying abstractions on model based diagnosis has
   been shown by [Mozetic 1990]. But abstraction is not only of high
   importance to diagnosis. Planning has to look for ways to reuse
   solutions of one problem for a broad range of new problems. This can
   be achieved by building abstract plans [Tenenberg 1986].
   
    From the viewpoint of reasoning steps, Pople's planning links form
   the basis of the inference step `match abstract solution'. That is the
   second step in the three step procedure: data abstraction { match
   abstract solution { refinement of solution. This procedure was found
   by [Clancey 1985] to be a fundamental abstract inference method when
   building the NEOMYCIN system. It is called `heuristic classification'.
   In the meantime several other abstract inference methods and problem
   solving classes have been identified (e.g. cover-and differentiate,
   propose-and-revise, hierarchical design). This is of high importance
   to knowledge acquisition. Using a repertoire of standard problem
   solving methods it is possible to instantiate the templates of these
   methods [Breuker et al. 1987, Marcus 1988], if the way an expert
   solves a problem matches one of the abstract problem solving methods.
   The templates guide the knowledge acquisition process by telling what
   to look for.
   
    Comparable to the idea of abstract inference methods is the idea
   of abstract task structures: The generic task approach [Chandrasekaran
   1986, 1987, 1988] has its focus on tasks like diagnosis,
   classification, or design. They are generic in the sense, that they
   will be instantiated to real tasks when confronted with a specific
   application. A generic task defines its function { the kind of problem
   it solves {, the knowledge structure and organization, and the control
   strategy to accomplish the function of the task. The focus is here on
   improvement of the knowledge acquisition process, too. Tools are
   provided for instantiating generic tasks: CSRL [Bylander et al. 1983],
   IDABLE [Sticklen 1983], DSPL [Brown and Chandrasekaran 1988]. If the
   application problem to solve is associated correctly with a generic
   task or a combination of tasks, the corresponding tool(s) will guide
   the knowledge acquisition process.
   
   What can we expect?
   
   Let us review the methodological achievements under the aspects of the
   limitations of first-generation expert systems:
   
    Robustness vs. performance: The use of structural domain knowledge
   and the use of principled reasoning methods based on this fine-grained
   domain knowledge is the way to achieve robustness when solving
   uncommon problems. But deep models are very slow performing knowledge
   structures when applying principled ways of reasoning during problem
   solving. Their challenge is the ability to serve as a ground for
   automatic construction of surface models by use of machine learning
   techniques analyzing cases often seen. In combination we get a fast
   performing problem solver when confronted with common cases, which can
   fall back to its robust reasoning methods on complicated situations.
   
    Explanability: The knowledge about the tasks and the inference
   steps the KBS is performing allows for explanations what is really
   going on. But not much focus has been put to explanation issues by the
   research community. In addition, explanations are expected to be
   user-tailored in the sense that they should take into account the
   level of experience of the user, the facts he/she already knows, and
   his/her intentions. This results in the need of an explicit user
   model. User modeling is a current area of AI research, but it will
   take some time until user models will guide the explanation (and
   reasoning) methods of expert systems in practice.
   
    Knowledge acquisition support: The support tools using the
   specification of domain models, problem solving classes and abstract
   task descriptions give us a chance to build KBS in a more consistent
   and complete way by having a specification of the whole problem
   solving process. They provide a basis to keep the system expandable
   and maintainable during the whole lifecycle. But (unfortunately) the
   knowledge engineer is needed more than before. At moment direct
   knowledge transfer from the expert to the KBS is possible only for
   fixed domains with specific forms of representation (e.g., OPAL [Musen
   1989]). Model-based knowledge acquisition [Shadbolt and Wielinga 1990]
   will hopefully guide the complex knowledge acquisition process in the
   form of an active and directive system in the future.
   
   Of essential importance is the functional definition of the problem
   solver at a conceptual level. The specification of KBS at the
   knowledge level as instantiation of abstract knowledge structures may
   help us (1) to create understandable, expandable, and portable
   systems. We are not captured by the implementation details which often
   override the conceptual structures of the application. (2) It may give
   us new insights to domain models, problem solving classes and task
   structures, thus, enhancing our repertoire of methods.
   
   Comparing the biological versus the technical domain we recognize the
   influence of medical applications not only to first-generation expert
   systems, but also to model-based architectures. The comparison of
   these two domains raises the question: Is there a unifying
   
   perspective? I.e., are there completely domain-independent
   architectures? What speaks against is the fact that we have very
   different domains (medical vs. technical): analog systems with
   tolerances and correcting feed-back loops vs. digital systems with 0-1
   behavior and errors effecting the whole system; partial models
   resulting from an incomplete understanding of biological processes vs.
   complete technical models which are easy to describe formally;
   external (environmental) causes of errors vs. internal causes of
   errors (material problems); many different knowledge structures vs.
   complex reasoning processes operating on few knowledge types. This may
   be the reason why medical applications tend to focus on the extensive
   task of representing domain knowledge, whereas applications in the
   technical domains concentrate on finding efficient inference methods.
   
   What speaks in favor of the unifying perspective is the fact that many
   medical applications formed the basis for more abstract methodologies,
   which have been used lateron in the technical domain: MYCIN ! EMYCIN,
   NEOMYCIN ! the inference method `heuristic classification', MDX/PATREC
   ! the generic task architecture. What seems to be identifyable are the
   same problem-solving methods and abstract domain concepts throughout
   very different domains. That makes abstract modeling a worthwhile
   thing to do. But at moment, we have only a very restricted view: (1)
   most systems have dealt with the problem of diagnosis, (2) the domains
   of application have been very restricted, and (3) we are at the early
   beginning of the usage of structure-based knowledge acquisition tools.
   
   In conclusion, second-generation architectures are still in the
   research labs. They will have a hard time to find the way to daily
   practice. But they offer a lot of possibilities to overcome the
   limitations of currently widespread used KBS. We have a lot to expect
   and it seems very worthwhile to put efforts into these model-based
   architectures.
   
   References
   
   Bratko I., Mozetic I., Lavrac N. (1989): Kardio - A Study in Deep and
   Qualitative Knowledge for Expert Systems, MIT Press, Cambridge, MA.
   
   Breuker J.A., Someren M.W.van, Hoog R.de, Schreiber G., Greef P.de,
   Bredeweg B., Wielemaker J., Billault J.-P., Davoodi M., Hayward S.A.
   (1987): Model-Driven Knowledge Acquistion: Interpretation Models,
   University of Amsterdam and STL Ltd., Esprit Project P1098, Memo 87.
   
   Brown D.C., Chandrasekaran B. (1988): Design Problem Solving:
   Knowledge Structures and Control Strategies, Morgan Kaufmann, Los
   Altos, CA.
   
   Bylander T., Mittal S., Chandrasekaran B. (1983): CSRL: A Language for
   Expert Systems for Diagnosis, in Proceedings of the 8th International
   Joint Conference on Artificial Intelligence, Morgan Kaufmann, Los
   Altos, CA.
   
   Bylander T. (1987): Some Causal Models are Deeper than Others, in
   Proc.Ninth Annual Conference of the Cognitive Science Society,
   Seattle, Wash., pp.916-921 (revised version: Artificial Intelligence
   in Medicine, 2(3)123-128, 1990).
   
   Chandrasekaran B. (1986): Generic Tasks in Knowledge-Based Reasoning:
   High-Level Building Blocks for Expert System Design, IEEE Expert,
   Fall, pp.23-30.
   
   Chandrasekaran B. (1987): Towards a Functional Architecture for
   Intelligence Based on Generic Information Processing Tasks, in
   Proceedings of the 10th International Joint Conference on Artificial
   Intelligence (IJCAI-87), Morgan Kaufmann, Los Altos, CA.
   
   Chandrasekaran B., Smith J., Sticklen J. (1987): \Deep" Models and
   Their Relation to Diagnosis, OSU-CIS-LAIR Technical Report, Ohio State
   University, Columbus.
   
   Chandrasekaran B. (1988): Generic Tasks as Building Blocks for
   Knowledge-Based Systems: The Diagnosis and Routine Design Examples,
   The Knowledge Engineering Review, 3(3)183-210.
   
   Clancey W.J. (1985): Heuristic Classification, Artificial
   Intelligence, 27(3)289-350.
   
   Davis R. (1983): Diagnosis Via Causal Reasoning: Paths of Interaction
   and the Locality Principle, in Proceedings of the Third National
   Conference on Artificial Intelligence (AAAI-83), William Kaufmann, Los
   Altos, CA, pp.88-94.
   
   Davis R. (1984): Diagnostic Reasoning Based on Structure and Behavior,
   Special Volume on Qualitative Reasoning about Physical Systems,
   Artificial Intelligence, 24(1-3)347-410.
   
   Glowinski A., O'Neil M., Fox J. (1989): Design of a Generic
   Information System and its Application to Primary Care, in Hunter J.,
   et al.(eds.), Proceedings of the Second European Conference on
   Artificial Intelligence in Medicine (AIME 89), Springer, Berlin,
   pp.221-233.
   
   Haag A. (1988): Deriving a Model of an Electrical Transformer for
   Qualitative Simulation with QSIM, in Fruchtenicht H.W., et al.(eds.),
   Technische Expertensysteme: Wissensreprasentation und
   Schlussfolgerungsverfahren, Oldenbourg, Munchen, pp.117-134.
   
   Hart P.E. (1982): Directions for AI in the Eighties, SIGART
   Newsletter, 79,11-16.
   
   Hayward S.A., Wielinga B.J., Breuker J.A. (1987): Structured Analysis
   of Knowledge, International Journal of Man-Machine Studies,
   26,487-498.
   
   Horn W. (1989): MESICAR - A Medical Expert System Integrating Causal
   and Associative Reasoning, Special Issue on Causal Modeling, Applied
   Artificial Intelligence, 3(2-3)305-336.
   
   Hunter J., Gotts N.M., Hamlet I., Kirby I. (1989): Qualitative Spatial
   and Temporal Reasoning in Cardiac Electrophysiology, in Hunter J., et
   al.(eds.), Proceedings of the Second European Conference on Artificial
   Intelligence in Medicine (AIME 89), Springer, Berlin, pp.157-166.
   
   Ironi L., Lanzola G., Stefanelli M. (1989): A Qualitative Model of
   Iron Metabolism, in Hunter J., et al.(eds.), Proceedings of the Second
   European Conference on Artificial Intelligence in Medicine (AIME 89),
   Springer, Berlin, pp.147-156.
   
   Keravnou E.T., Washbrook J. (1989): What is a Deep Expert System? An
   Analysis of the Architectural Requirements of Second-Generation Expert
   Systems, The Knowledge Engineering Review, 4(3)205-233.
   
   Kleer J.de, Williams B.C. (1987): Diagnosing Multiple Faults,
   Artificial Intelligence, 32(1)97-130.
   
   Kleer J.de, Mackworth A.K., Reiter R. (1990): Characterizing
   Diagnosis, Working Notes \First International Workshop on Principles
   of Diagnosis", Stanford University, California, USA, July 23-25,
   pp.1-7.
   
   Klein D., Finin T. (1987): What's in a Deep Model? A Characterization
   of Knowledge Depth in Intelligent Safety Systems, in Proceedings of
   the 10th International Joint Conference on Artificial Intelligence
   (IJCAI-87), Morgan Kaufmann, Los Altos, CA, pp.559-562.
   
   Kuipers B.J. (1986): Qualitative Simulation, Artificial Intelligence,
   29(3)289-338.
   
   Kunz J.C. (1983): Analysis of Physiological Behavior Using a Causal
   Model Based on First Principles, in Proceedings of the Third National
   Conference on Artificial Intelligence (AAAI- 83), William Kaufmann,
   Los Altos, CA, pp.225-228.
   
   Marcus S.(ed.) (1988): Automating Knowledge Acquisition for Expert
   Systems, Kluwer, Boston.
   
   McDermott J. (1988): A Taxonomy of Problem-Solving Methods, in Marcus
   S.(ed.): Automating Knowledge Acquisition for Expert Systems, Kluwer,
   Boston.
   
   Michie D. (1981): High-Road and Low-Road Programs, AI-Magazine,
   3(1)21-22.
   
   Mozetic I. (1990): Reduction of Diagnostic Complexity through Model
   Abstractions, in Working Notes \First International Workshop on
   Principles of Diagnosis", Stanford University, California, USA, July
   23-25, pp.102-111.
   
   Musen M.A. (1989): Automated Generation of Model-based
   Knowledge-Acquisition Tools, Pitman, London.
   
   Newell A. (1982): The Knowledge Level, Artificial Intelligence,
   18(1)87-127.
   
   Patil R.S., Szolovits P., Schwartz W.B. (1981): Causal Understanding
   of Patient Illness in Medical Diagnosis, in Proceedings of the 7th
   International Joint Conference on Artificial Intelligence, University
   of British Columbia, Vancouver, Canada, pp.893-899.
   
   Patil R.S., Szolovits P., Schwartz W.B. (1982): Modeling Knowledge of
   the Patient in Acid-Base and Electrolyte Disorders, in Szolovits
   P.(ed.), Artificial Intelligence in Medicine, Westview Press, Boulder,
   CO.
   
   Pople H.E. (1982): Heuristic Methods for Imposing Structure in
   Ill-Structured Problems: The Structuring of Medical Diagnostics, in
   Szolovits P.(ed.), Artificial Intelligence in Medicine, Westview
   Press, Boulder, CO.
   
   Reiter R. (1987): A Theory of Diagnosis from First Principles,
   Artificial Intelligence, 32(1)57-96.
   
   Schreiber G., Breuker J., Bredeweg B., Wielinga B.J. (1988): Modelling
   in KBS Development, in Boose J.H., et al.(eds.), Proceedings of the
   European Knowledge Acquisition Workshop (EKAW'88), GMD-Studien Nr.143,
   St.Augustin, FRG.
   
   Senyk O., Patil R.S., Sonnenberg F.A. (1989): Systematic Knowledge
   Base Design for Medical Diagnosis, Special Issue on Causal Modeling,
   Applied Artificial Intelligence, 3(2-3)249-274.
   
   Shadbolt N.R., Wielinga B. (1990): Knowledge-Based Knowledge
   Acquisition: The Next Generation of Support Tools, in Wielinga B., et
   al.(eds.), Current Trends in Knowledge Acquisition (Proc.EKAW'90),
   IOS, Amsterdam, pp.313-338.
   
   Steels L. (1985): Second Generation Expert Systems, Future Generations
   Computer Systems, 1(4)213-221.
   
   Steels L. (1988): The Deepening of Expert Systems, in Vichnevetsky R.,
   et al.(eds.), Proceedings of the 12th IMACS World Congress, Paris,
   France, Vol.4, pp.323-326.
   
   Steels L. (1989): Diagnosis with a Function-Fault Model, Special Issue
   on Causal Modeling, Applied Artificial Intelligence, 3(2-3)213-238.
   
   Steels L. (1990): Components of Expertise, AI-Magazine, 11(2)28-49.
   
   Sticklen J. (1983): Manual for IDABLE, OSU-CIS-LAIR Technical Report,
   Ohio State University, Columbus.
   
   Sticklen J., Chandrasekaran B. (1989): Integrating
   Classification-Based Compiled Level Reasoning with Function-Based Deep
   Level Reasoning, Special Issue on Causal Modeling, Applied Artificial
   Intelligence, 3(2-3)275-304.
   
   Sticklen J., Chandrasekaran B., Bond W.E. (1989): Applying a
   Functional Approach for Model Based Reasoning, in Proceedings of the
   IJCAI-89 Workshop on Model-Based Reasoning, Detroit, Mich.,
   pp.165-176.
   
   Tenenberg J. (1986): Planning with Abstraction, in Proceedings of the
   Fifth National Conference on Artificial Intelligence (AAAI-86), Morgan
   Kaufmann, Los Altos, CA.
   
   Washbrook J., Keravnou E.T. (1990): Making Deepness Explicit,
   Artificial Intelligence in Medicine, 2(3)129-134.
   
   Weiss S.M., Kulikowski C.A., Amarel S. (1978): A Model-Based Method
   for Computer-Aided Medical Decision-Making, Artificial Intelligence,
   11,145-172.
